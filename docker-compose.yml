version: '2'
services:
  # databases
  redis:
    image: redis
    container_name: boiler_redis
    volumes:
      - ./.boilerstack/redis:/data
  mongo:
    image: mongo
    container_name: boiler_mongo
    volumes:
      - ./.boilerstack/mongo:/data/db
  digger:
    image: binocarlos/digger-rest
    container_name: boiler_digger
    volumes:
      - ./.boilerstack/digger:/data/db
  # edge router
  router:
    image: binocarlos/noxy
    container_name: boiler_router
    ports:
      - "80:80"
    depends_on:
      - frontend
      - auth
      - api
    links:
      - frontend:frontend
      - auth:auth
      - api:api
    environment:
      NOXY_AUTH_FRONT: /auth/v1
      NOXY_AUTH_HOST: auth
      NOXY_API_FRONT: /api/v1
      NOXY_API_HOST: api
      NOXY_DEFAULT_HOST: frontend
  # static web server
  frontend:
    build:
      context: ./frontend
    container_name: boiler_frontend
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
  # stateless services
  auth:
    image: binocarlos/passport-slim
    container_name: boiler_auth
    links:
      - redis:redis
      - userstorage:userstorage
    #volumes:
    #  - ../passport-slim/src:/app/src
    #entrypoint: 
    #  - "sleep"
    #  - "10000000"
    environment:
      LOGLEVEL: debug
      MOUNTPATH: /auth/v1
      REDIS_SERVICE_HOST: redis
      STORAGE_SERVICE_HOST: userstorage
      STORAGE_SERVICE_PATH: /userstorage/v1
      EMAIL_FIELD: 1
      COOKIE_SECRET: apples
  userstorage:
    image: binocarlos/passport-slim-instant-mongo
    container_name: boiler_userstorage
    links:
      - storage:storage
    #volumes:
    #  - ../passport-slim-instant-mongo/src:/app/src
    #entrypoint: 
    #  - "sleep"
    #  - "10000000"
    environment:
      LOGLEVEL: debug
      MOUNTPATH: /userstorage/v1
      STORAGE_SERVICE_HOST: storage
      STORAGE_SERVICE_PATH: /api/v1/users
  storage:
    build:
      context: ./storage
    ports:
      - "8081:80"
    container_name: boiler_storage
    links:
      - mongo:mongo
    volumes:
      - ./storage/src/models.js:/app/src/models.js
    environment:
      LOGLEVEL: debug
      FILE: /app/src/models.js
      MONGO_SERVICE_HOST: mongo
      MONGO_SERVICE_DB: boiler_storage
  api:
    build:
      context: ./api
    container_name: boiler_api
    ports:
      - "8082:80"
    links:
      - auth:auth
      - digger:digger
      - storage:storage
    volumes:
      - ./api/src:/app/src
    #entrypoint: 
    #  - "sleep"
    #  - "10000000"
    environment:
      LOGLEVEL: debug
      AUTH_SERVICE_HOST: auth
      AUTH_SERVICE_PORT: 80
      DIGGER_SERVICE_HOST: digger
      DIGGER_SERVICE_PORT: 80
      STORAGE_SERVICE_HOST: storage
      STORAGE_SERVICE_PORT: 80